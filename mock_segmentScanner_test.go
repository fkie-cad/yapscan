// Code generated by mockery v2.15.0. DO NOT EDIT.

package yapscan

import (
	procio "github.com/fkie-cad/yapscan/procio"
	mock "github.com/stretchr/testify/mock"

	yara "github.com/hillu/go-yara/v4"
)

// mockSegmentScanner is an autogenerated mock type for the segmentScanner type
type mockSegmentScanner struct {
	mock.Mock
}

// ScanSegment provides a mock function with given fields: seg
func (_m *mockSegmentScanner) ScanSegment(seg *procio.MemorySegmentInfo) ([]yara.MatchRule, []byte, error) {
	ret := _m.Called(seg)

	var r0 []yara.MatchRule
	if rf, ok := ret.Get(0).(func(*procio.MemorySegmentInfo) []yara.MatchRule); ok {
		r0 = rf(seg)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]yara.MatchRule)
		}
	}

	var r1 []byte
	if rf, ok := ret.Get(1).(func(*procio.MemorySegmentInfo) []byte); ok {
		r1 = rf(seg)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]byte)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(*procio.MemorySegmentInfo) error); ok {
		r2 = rf(seg)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTnewMockSegmentScanner interface {
	mock.TestingT
	Cleanup(func())
}

// newMockSegmentScanner creates a new instance of mockSegmentScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockSegmentScanner(t mockConstructorTestingTnewMockSegmentScanner) *mockSegmentScanner {
	mock := &mockSegmentScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
