// Code generated by mockery v2.12.2. DO NOT EDIT.

package yapscan

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	yara "github.com/hillu/go-yara/v4"
)

// MockMemoryScanner is an autogenerated mock type for the MemoryScanner type
type MockMemoryScanner struct {
	mock.Mock
}

// ScanMem provides a mock function with given fields: buf
func (_m *MockMemoryScanner) ScanMem(buf []byte) ([]yara.MatchRule, error) {
	ret := _m.Called(buf)

	var r0 []yara.MatchRule
	if rf, ok := ret.Get(0).(func([]byte) []yara.MatchRule); ok {
		r0 = rf(buf)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]yara.MatchRule)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(buf)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockMemoryScanner creates a new instance of MockMemoryScanner. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMemoryScanner(t testing.TB) *MockMemoryScanner {
	mock := &MockMemoryScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
