// Code generated by mockery v2.12.2. DO NOT EDIT.

package yapscan

import (
	procio "github.com/fkie-cad/yapscan/procio"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockMemorySegmentFilter is an autogenerated mock type for the MemorySegmentFilter type
type MockMemorySegmentFilter struct {
	mock.Mock
}

// Description provides a mock function with given fields:
func (_m *MockMemorySegmentFilter) Description() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Filter provides a mock function with given fields: info
func (_m *MockMemorySegmentFilter) Filter(info *procio.MemorySegmentInfo) *FilterMatch {
	ret := _m.Called(info)

	var r0 *FilterMatch
	if rf, ok := ret.Get(0).(func(*procio.MemorySegmentInfo) *FilterMatch); ok {
		r0 = rf(info)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*FilterMatch)
		}
	}

	return r0
}

// NewMockMemorySegmentFilter creates a new instance of MockMemorySegmentFilter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMemorySegmentFilter(t testing.TB) *MockMemorySegmentFilter {
	mock := &MockMemorySegmentFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
