// Code generated by mockery v2.15.0. DO NOT EDIT.

package yapscan

import (
	procio "github.com/fkie-cad/yapscan/procio"
	mock "github.com/stretchr/testify/mock"
)

// mockMemoryReaderFactory is an autogenerated mock type for the memoryReaderFactory type
type mockMemoryReaderFactory struct {
	mock.Mock
}

// NewMemoryReader provides a mock function with given fields: proc, seg
func (_m *mockMemoryReaderFactory) NewMemoryReader(proc procio.Process, seg *procio.MemorySegmentInfo) (procio.MemoryReader, error) {
	ret := _m.Called(proc, seg)

	var r0 procio.MemoryReader
	if rf, ok := ret.Get(0).(func(procio.Process, *procio.MemorySegmentInfo) procio.MemoryReader); ok {
		r0 = rf(proc, seg)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(procio.MemoryReader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(procio.Process, *procio.MemorySegmentInfo) error); ok {
		r1 = rf(proc, seg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockMemoryReaderFactory interface {
	mock.TestingT
	Cleanup(func())
}

// newMockMemoryReaderFactory creates a new instance of mockMemoryReaderFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockMemoryReaderFactory(t mockConstructorTestingTnewMockMemoryReaderFactory) *mockMemoryReaderFactory {
	mock := &mockMemoryReaderFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
